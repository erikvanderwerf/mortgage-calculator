[build-system]
requires = [
    # Versions Updated 2024-12-08
    "cython  ~=3.0, >=3.0",
    "setuptools ~=71.0, >=71.0",
    "setuptools_scm[toml] ~=8.0, >=8.0",
]
build-backend = "setuptools.build_meta"

[project]
name = "mortgage"
authors = [
    {name = "Erik VanderWerf", email="eski787@gmail.com"}
]
description = "Mortgage Comparison and Calculator."
readme = "readme.md"
requires-python = ">=3.10"
dependencies = [
    "babel                      ~=2.12,     >=2.12.1",
    "inflect                    ~=7.2,      >=7.2.1",
    "more-itertools             ~=10.0,     >=10.1.0",
    "pydantic                   ~=2.8,     >=2.8.0",
    "python-dateutil            ~=2.8,      >=2.8.2",
    "py-moneyed                 ~=3.0,      >=3.0",
    "tabulate                   ~=0.9,      >=0.9.0",
    "typing-extensions          ~=4.5,      >=4.5.0",
]
dynamic = ["version"]

[project.optional-dependencies]
coverage = [
    "coverage[toml]     ~=7.2,  >=7.2.1",
]
develop = [
    "black                  >=24",
    "mypy                   ~=1.0,  >=1.0.0",
    "pip-tools              ~=7.0,  >=7.1.0",
    "pytest                 ~=8.2,  >=8.2.2",
    "pytest-cov             ~=5.0,  >=5.0.0",
    "setuptools-scm         ~=8.0,  >=8.0.0",
    "tox                    ~=4.4,  >=4.4.6",
    "types-python-dateutil  ~=2.8",
    "types-pyyaml           ~=6.0,  >=6.0.12.5",
    "types-tabulate         ~=0.9.0.3",
]
flake8 = [
    "flake8                         ~=7.1,       >=7.1.0",        # (F, E, W)
    "flake8-annotations-complexity  ~=0.0.7,     >=0.0.7",        # (TAE002)
    "flake8-bandit                  ~=4.1,       >=4.1.1",        # (S)
    "flake8-breakpoint              ~=1.1,       >=1.1.0",        # (B60)
    "flake8-bugbear                 ~=24.4,      >=24.4.26",      # (B)
    "flake8-builtins                ~=2.1,       >=2.1.0",        # (A)
    "flake8-comprehensions          ~=3.10,      >=3.10.1",       # (C4)
    "flake8-if-expr                 ~=1.0,       >=1.0.4",        # (KEK100)
    "flake8-import-order            ~=0.18.2,    >=0.18.2",       # (I)
    "flake8-logging-format          ~=2024.24,   >=2024.24.12",   # (G)
    # "flake8-print                   ~=5.0,    >=5.0.0",           # (T2)
    "flake8-pydocstyle              ~=0.2.2,     >=0.2.2",        # (D)
    "flake8-requirements            ~=2.2,       >=2.2.0",        # (I90)
    "flake8-return                  ~=1.2,       >=1.2.0",        # (R50)
    "flake8-black                   ~=0.3.6,     >=0.3.6",        # (BLK)
    "flake8-pyproject               ~=1.2,       >=1.2.2",        # (flake8p)
    "pep8-naming                    ~=0.14.1,    >=0.14.1",       # (N8)
]

[project.scripts]
mortgage = "mortgage.run:main"

[tool.black]
line-length = 88

[tool.coverage.run]
branch = true

[tool.coverage.report]
exclude_lines = [
    # Regex. Periods (.) match any character.
    "pragma: no cover",
    "raise NotImplementedError()",
    "if TYPE_CHECKING:",
    "if __name__ == .__main__.:",
    'class .*\bProtocol\):'
]
fail_under = 100

[tool.flake8]
# flake8 does not support .toml natively. Using `flake8-pyproject`.
enable-extensions = "G"
exclude = [
    ".tox",
    "build",
    "venv",
]
extend-select = "B9"
ignore = [
    "A003",  # Methods like .open() and .bytes() are fine.
    "D105",  # TODO https://github.com/PyCQA/pydocstyle/issues/632
    "E203",  # This is not PEP8 compliant, Black is correct.
    "I",     # TODO https://youtrack.jetbrains.com/issue/PY-58968
    "R501",  # Explicit `None` returns are good.
    "R504",  # TODO https://github.com/afonasev/flake8-return/issues/132
    "W503",  # This goes against PEP 8, we want operators on the next line.
]
per-file-ignores = [

]

max-complexity = 10
max-line-length = 88

# Black
black-config = "pyproject.toml"

# Import Order
application-import-names = "mortgage"

[tool.mypy]
ignore_missing_imports = "true"
#strict = "true"

[tool.pydocstyle]
ignore-decorators = "overrides"

[tool.pytest.ini_options]
pythonpath = [
    "src"
]

[tool.setuptools_scm]

[tool.tox]
legacy_tox_ini = """
[tox]
envlist=clean,flake8,mypy,test

[testenv:clean]
extras = coverage
skip_install = true
allowlist_externals =
    coverage
commands = coverage erase

[testenv:flake8]
extras = flake8
skip_install = true
allowlist_externals =
    flake8
commands =
    flake8: flake8

[testenv:{mypy,test}]
extras = develop
skip_install = true
allowlist_externals =
    mypy
    pytest
commands =
    mypy: mypy src/ tests/
    test: pytest --cov --cov-append
"""
